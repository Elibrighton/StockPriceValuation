<Window x:Class="StockPriceValuation.Views.StockPriceValuationView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:StockPriceValuation"
        mc:Ignorable="d"
        Title="Stock Price Valuation" Height="600" Width="1075" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="progressBarStyle" TargetType="ProgressBar">
            <Setter Property="Width" Value="1050" />
            <Setter Property="Height" Value="28" />
            <Setter Property="Minimum" Value="0" />
        </Style>
    </Window.Resources>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <Label Content="Stock exchange:"></Label>
                        <RadioButton GroupName="StockExchange" IsChecked="{Binding AsxRadioButtonChecked}" IsEnabled="{Binding AsxRadioButtonEnabled}" Margin="0, 0, 5, 0" VerticalAlignment="Center">ASX</RadioButton>
                        <RadioButton GroupName="StockExchange" IsChecked="{Binding NyseRadioButtonChecked}" IsEnabled="{Binding NyseRadioButtonEnabled}" Margin="5, 0, 5, 0" VerticalAlignment="Center">NYSE</RadioButton>
                        <RadioButton GroupName="StockExchange" IsChecked="{Binding NasdaqRadioButtonChecked}" IsEnabled="{Binding NasdaqRadioButtonEnabled}" Margin="5, 0, 0, 0" VerticalAlignment="Center">NASDAQ</RadioButton>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <Label Content="Filter:"></Label>
                        <ComboBox Width="200" HorizontalAlignment="Left">
                            <ComboBoxItem IsSelected="{Binding AllDecisionComboBox}">All</ComboBoxItem>
                            <ComboBoxItem IsSelected="{Binding BuyDecisionComboBox}">Buy</ComboBoxItem>
                            <ComboBoxItem IsSelected="{Binding HoldDecisionComboBox}">Hold</ComboBoxItem>
                            <ComboBoxItem IsSelected="{Binding SellDecisionComboBox}">Sell</ComboBoxItem>
                            <ComboBoxItem IsSelected="{Binding UnknownDecisionComboBox}">Unknown</ComboBoxItem>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding DecisionChangedCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <CheckBox IsChecked="{Binding ExcludeUnknownCheckbox}" IsEnabled="{Binding ExcludeUnknownCheckboxEnabled}" VerticalAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding ExcludeUnknownCheckboxCommand}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding ExcludeUnknownCheckboxCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            Exclude Unknown
                        </CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <Label Content="Company code:"></Label>
                        <TextBox MinWidth="100" Text="{Binding StockCodeTextBox}"></TextBox>
                    </StackPanel>
                </StackPanel>
                <ListView Grid.Column="0" 
                          Grid.Row="1" 
                          Margin="10" 
                          ItemsSource="{Binding Path=Companies}" 
                          MinHeight="420"
                          MaxHeight="420"
                          SelectionMode="Single">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Company" Width="300" DisplayMemberBinding="{Binding Name}"  />
                            <GridViewColumn Header="Code" Width="75" DisplayMemberBinding="{Binding Stock.Code}" />
                            <GridViewColumn Header="Price" Width="75" DisplayMemberBinding="{Binding Stock.Price}" />
                            <GridViewColumn Header="TTM EPS" Width="75" DisplayMemberBinding="{Binding Stock.TtmEps}" />
                            <GridViewColumn Header="EPS" Width="75" DisplayMemberBinding="{Binding Stock.Eps}" />
                            <GridViewColumn Header="PE ratio" Width="75" DisplayMemberBinding="{Binding Stock.PeRatio}" />
                            <GridViewColumn Header="Fair price" Width="75" DisplayMemberBinding="{Binding Stock.Valuation.FairPrice}" />
                            <GridViewColumn Header="Buy price" Width="75" DisplayMemberBinding="{Binding Stock.Valuation.BuyPrice}" />
                            <GridViewColumn Header="Percent diff" Width="75" DisplayMemberBinding="{Binding Stock.PercentageDiff}" />
                            <GridViewColumn Header="Decision" Width="75" DisplayMemberBinding="{Binding Stock.Decision}" />
                        </GridView>
                    </ListView.View>
                </ListView>
                <DockPanel Margin="10" Grid.Row="2" Grid.Column="0">
                    <TextBlock Text="{Binding ProgressMessage, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Left" />
                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Margin="0, 0, 5, 0" Command="{Binding CheckButtonCommand}" IsEnabled="{Binding CheckButtonEnabled}" MinWidth="100">Check</Button>
                        <Button Margin="5, 0, 5, 0" Command="{Binding PauseButtonCommand}" IsEnabled="{Binding PauseButtonEnabled}" MinWidth="100">Pause</Button>
                        <Button Margin="5, 0, 0, 0" Command="{Binding CancelButtonCommand}" IsEnabled="{Binding CancelButtonEnabled}" MinWidth="100">Cancel</Button>
                    </StackPanel>
                </DockPanel>
            </Grid>
        </StackPanel>
        
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel></StackPanel>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <ProgressBar Style="{StaticResource progressBarStyle}"
                            Value="{Binding ProgressBarValue, UpdateSourceTrigger=PropertyChanged}"
                            IsIndeterminate="{Binding ProgressBarIsIndeterminate, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="{Binding ProgressBarMax, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
        </StatusBar>
    </DockPanel>
</Window>
